API:
  TODO: https://github.com/tc39/proposal-regexp-match-indices -> result.indices // [[1, 8], [4, 8], [6, 8]]
  TODO: use .groups.all etc., use .names for iteration
  TODO: add numbered groups for named groups?
  TODO: eventually remove "/regexp/flags" or only allow it if only one parameter or no flags given
  TODO: find a way to represent the nesting of groups in the result / iterator for each level or for tree
  TODO: g-flag -> array of matches-objects
  TODO: properties flags, global,... RegExp.prototype.*  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global
  TODO: string.match
  TODO: string.search
  TODO: string.replace
  TODO: string.split
  TODO: uxre.replace
  TODO: uxre.traverse result tree
  TODO: import features from xregexp http://www.regular-expressions.info/xregexp.html
    TODO: attach to RegExp object like xregexp does? probably not, because we do not mimic RegExp API
    TODO: xregexp.isRegExp
    TODO: xregexp.build
    TODO: xregexp.union
    TODO: xregexp.forEach
    TODO: xregexp.matchChain
  TODO: http://www.regular-expressions.info/replacebackref.html named backreferences, refs to "(...)?"

algorithm:
  TODO: wrapping not necessary after the last capturing group (do we need this group for anything?)

general:
  TODO: babel, ES6
  TODO: check all return values of traverse functions?

tests:
  TODO: add tests for multiline etc. (current use-case is single line only)
